面向对象：
（1）特征：calss（类）
封装：（存在于类的属性是独立的,封装的。）
继承：父类继承子类
多态：一中接口，多个实现。

（2）编程范式：编程是程序员使用特定的语法+数据结构+算法结构来构造代码，告诉计算机执行任务的过程，
编程范式就是编程的方法。
面面向过程：
面向对象：
函数式编程：

类：（class）对一类拥有相同的属性的对象的抽象，蓝图，原型。
     “属性”，“相同方法”
     构造模板。

对象： 类的实例化后的对象

(3) 实例化：把类变成实例的过程就是实例化。

(4) 构造函数：在实例化的时候做一些类的初始化工作。
class Obj:
   def __init__(self,name):
       self.name = name

   def run(self):
       print("%s"%self.name)

obj01 = Obj("anliu")
obj02 = Obj("user01")
obj03 = Obj("user02")
构造函数通过self传递实例化后的对象给类方法。

(5) 私有属性（封装）
self.__name = name
私有属性在类的外部无法调运和修改，只能类得内部使用。

(6) 私有方法（封装）
    def __run(self):   #私有方法，
        print("running")

(7)析构函数：在实例释放销毁的时候自动的执行一些操作，常用于做一些收尾性的工作，
比如关闭数据的链接，关闭，清理一些临时文件.
是类的内部调运，不能传递参数。
在对象执行结束或者del后，内存被释放或销毁的时候时执行。
    def __del__(self):
       pass

